on:
  push:
    branches:
      - master
      - dev

name: Deploy to AWS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASS }}

    - name: Build, tag, and push image
      id: build-image
      env:
        ECR_REGISTRY: thiennhan
        ECR_REPOSITORY: dirac
        IMAGE_TAG: 948051fd9511aae2f1656e7de4eb6952387fa52f
      run: |
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: deploy prod
      uses: appleboy/ssh-action@master
      if: ${{github.ref == 'refs/heads/master'}}
      with:
        host: 54.255.176.251
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker pull ${{ steps.build-image.outputs.image }}
          docker stop dirac-backend && docker rm dirac-backend
          docker run  -d --restart=always --name=dirac-backend --env NODE_ENV=prod --cap-add=SYS_ADMIN -p 80:3030 --log-driver=awslogs --log-opt awslogs-region=ap-southeast-1 --log-opt awslogs-group=dirac-ec2-log ${{ steps.build-image.outputs.image }}

    - name: deploy dev
      uses: appleboy/ssh-action@master
      if: ${{github.ref == 'refs/heads/dev'}}
      with:
        host: 18.139.77.12
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker pull ${{ steps.build-image.outputs.image }}
          docker stop dirac-backend && docker rm dirac-backend
          docker run -d --restart=always --name=dirac-backend --env NODE_ENV=dev  --cap-add=SYS_ADMIN -p 80:3030 --log-driver=awslogs --log-opt awslogs-region=ap-southeast-1 --log-opt awslogs-group=dirac-ec2-log-dev ${{ steps.build-image.outputs.image }}
